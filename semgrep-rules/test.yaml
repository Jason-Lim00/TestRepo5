rules:
  - id: apex.injection.soql-injection.unescaped-param
    mode: search
    severity: ERROR
    languages:
      - apex
    metadata:
      category: security
      rule-origin-note: published from
        /src/rules/apex/injection/ApexSOQLInjectionUnescapedParam.yaml in
        https://github.com/ncino/semgrep-rules
    message: In other programming languages, the previous flaw is known as SQL
      injection. Apex doesn't use SQL, but uses its own database query language,
      SOQL. SOQL is much simpler and more limited in functionality than SQL. The
      risks are much lower for SOQL injection than for SQL injection, but the
      attacks are nearly identical to traditional SQL injection. SQL/SOQL
      injection takes user-supplied input and uses those values in a dynamic
      SOQL query. If the input isn't validated, it can include SOQL commands
      that effectively modify the SOQL statement and trick the application into
      performing unintended commands. If a dynamic query must be used, leverage
      nFORCE Query Builder.
    pattern: Database.query(<... $P ...>)
